---
// const { id } = Astro.props as Props;
---
<button style="position: absolute; right: 22px; top:16px;"
  class="inline-flex items-center dark:text-white justify-center tracking-wide font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-10 w-10 rounded-full p-1 text-sm sticky top-0"
  title="Toggle theme"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
    class="rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0">
    <circle cx="12" cy="12" r="4"></circle>
    <path d="M12 2v2"></path>
    <path d="M12 20v2"></path>
    <path d="m4.93 4.93 1.41 1.41"></path>
    <path d="m17.66 17.66 1.41 1.41"></path>
    <path d="M2 12h2"></path>
    <path d="M20 12h2"></path>
    <path d="m6.34 17.66-1.41 1.41"></path>
    <path d="m19.07 4.93-1.41 1.41"></path>
  </svg><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
    class="absolute rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100">
    <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
  </svg><span class="sr-only">Toggle theme</span></button>
<button id="theme-toggle-main" type="button" style="z-index: 4;"
  class="rounded-lg text-sm p-2.5">
  <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
  <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg">
    <path
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      fill-rule="evenodd" clip-rule="evenodd"></path>
  </svg>
</button>
<script>
  function toggleTheme() {
    if (typeof sessionStorage !== 'undefined') {
      const currentTheme = sessionStorage.getItem('color-theme');
      console.log('Current Theme:', currentTheme);

      document.documentElement.classList.toggle('dark', currentTheme === 'dark');
    }
  }

  document.addEventListener('DOMContentLoaded', function () {
    toggleTheme();

    const themeToggleBtn = document.getElementById('theme-toggle-main');
    if (themeToggleBtn) {
      themeToggleBtn.addEventListener('click', function () {
        if (typeof sessionStorage !== 'undefined') {
          const currentTheme = sessionStorage.getItem('color-theme');
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

          // Toggle theme value in session storage
          sessionStorage.setItem('color-theme', newTheme);

          // Toggle the theme class
          toggleTheme();
        }
      });
    }
  });

  window.addEventListener('beforeunload', function () {
    const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
    sessionStorage.setItem('color-theme', currentTheme);
  });
</script>